# render.yaml (Önerilen Yeni Hali)

services:
  # Servis 1: Redis Veritabanı (Değişiklik yok)
  - type: redis
    name: redis-db
    plan: free
    ipAllowList: []

  # Servis 2: Streamlit Web Uygulaması
  - type: web
    name: streamlit-app
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "streamlit run streamlit_app.py --server.port $PORT --server.address 0.0.0.0 --server.enableCORS=false"
    healthCheckPath: /_stcore/health
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-db
          property: connectionString
      - key: RENDER_EXTERNAL_URL
        fromService:
          type: web
          name: streamlit-app
          property: url

  # Servis 3: Arka Plan İşçisi (YENİ VE DOĞRU YAPI)
  - type: worker
    name: rq-worker
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "python worker.py" # Doğrudan worker'ı başlatır
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-db
          property: connectionString

  # Servis 4: Cron Job - Otomatik Sync (Değişiklik yok)
  - type: cron
    name: auto-sync-scheduler
    env: python
    buildCommand: "pip install -r requirements.txt"
    schedule: "0 */2 * * *"
    startCommand: "timeout 25m python cron_scheduler.py"
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-db
          property: connectionString
      - key: APP_URL
        fromService:
          type: web
          name: streamlit-app
          property: url

  # Servis 5: Keep-Alive Service (Tek servis yeterli ve daha basit)
  - type: cron
    name: keep-alive
    env: python
    buildCommand: "pip install requests"
    schedule: "*/5 * * * *"
    startCommand: "python keep_alive.py" # Ayrı bir betik ile daha temiz yönetim